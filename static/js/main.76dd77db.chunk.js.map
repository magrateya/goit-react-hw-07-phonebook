{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Section","children","className","s","section","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useSelector","dispatch","useDispatch","useForm","register","handleSubmit","errors","reset","onSubmit","data","e","number","find","alert","post","then","catch","error","nameLabel","ref","required","maxLength","minLength","type","style","color","formBtn","ContactItem","id","onDeleteContact","contactItem","onClick","ContactList","useEffect","get","contactList","map","contId","contactId","delete","Filter","value","filterLabel","filterTitle","onChange","target","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76dd77db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1oeAe\",\"contactItem\":\"ContactList_contactItem__3aMz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameLabel\":\"ContactForm_nameLabel__1uEXA\",\"formBtn\":\"ContactForm_formBtn__1Hhzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__GbLne\",\"filterTitle\":\"Filter_filterTitle__2mdBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Dg6q6\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ children }) {\n  return <div className={s.section}>{children}</div>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from '../redux/actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport s from './ContactForm.module.css';\nimport { addContact } from '../../redux/operations';\nimport { getItems } from '../../redux/selectors';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, errors, reset } = useForm();\n\n  const onHandleSubmit = (data, e) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n      )\n    ) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(data.name, data.number));\n\n    reset({ name: '', number: '' });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onHandleSubmit)}>\n      <label className={s.nameLabel}>\n        Name\n        <input\n          ref={register({ required: true, maxLength: 20, minLength: 2 })}\n          type=\"text\"\n          name=\"name\"\n        />\n        {errors.name?.type === 'required' && (\n          <span style={{ color: 'red' }}>'Your input is required'</span>\n        )}\n        {errors.name?.type === 'maxLength' && (\n          <span style={{ color: 'red' }}>'Your input is too long'</span>\n        )}\n        {errors.name?.type === 'minLength' && (\n          <span style={{ color: 'red' }}>'Your input is too short'</span>\n        )}\n      </label>\n      <label className={s.nameLabel}>\n        Number\n        <input\n          ref={register({ required: true, maxLength: 20, minLength: 7 })}\n          type=\"text\"\n          name=\"number\"\n        />\n        {errors.number?.type === 'required' && (\n          <span style={{ color: 'red' }}>'Your input is required'</span>\n        )}\n        {errors.number?.type === 'maxLength' && (\n          <span style={{ color: 'red' }}>'Your input is too long'</span>\n        )}\n        {errors.number?.type === 'minLength' && (\n          <span style={{ color: 'red' }}>'Your input is too short'</span>\n        )}\n      </label>\n      <button className={s.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li className={s.contactItem}>\n      <span>{name}</span>\n      <span>{number}</span>\n      <button type=\"submit\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n","// import { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport s from './ContactList.module.css';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport { fetchContacts, deleteContact } from '../../redux/operations';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      <ul className={s.contactList}>\n        {contacts.map(contact => (\n          <ContactItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n            onDeleteContact={contId => dispatch(deleteContact(contId))}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import { useSelector, useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { changeFilter } from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterLabel}>\n      <span className={s.filterTitle}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      ></input>\n    </label>\n  );\n}\n","import Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <Section>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Section>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactsSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactReducer from './reducer';\n// import storage from 'redux-persist/lib/storage';\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const persistedReducer = persistReducer(contactsPersistConfig, contactReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware,\n});\n\n// const persistor = persistStore(store);\n\n// export default { store, persistor };\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}