{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/actions.js","redux/operations.js","redux/selectors.js","components/Loader/Loader.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","img/disconnect.jpg","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Section","children","className","s","section","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getItems","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","LoaderRings","type","color","height","width","timeout","React","Component","ContactForm","useSelector","dispatch","useDispatch","useForm","register","handleSubmit","errors","reset","onSubmit","data","number","find","alert","post","then","catch","error","nameLabel","ref","required","maxLength","minLength","style","formBtn","ContactItem","id","onDeleteContact","contactItem","onClick","ContactList","useEffect","get","console","log","length","contactList","map","contId","contactId","delete","src","Disconnect","alt","marginTop","Filter","value","filterLabel","filterTitle","onChange","e","target","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cacb174.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1oeAe\",\"contactItem\":\"ContactList_contactItem__3aMz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameLabel\":\"ContactForm_nameLabel__1uEXA\",\"formBtn\":\"ContactForm_formBtn__1Hhzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__GbLne\",\"filterTitle\":\"Filter_filterTitle__2mdBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Dg6q6\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ children }) {\n  return <div className={s.section}>{children}</div>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from '../redux/actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\n\nimport Loader from 'react-loader-spinner';\n\nexport default class LoaderRings extends React.Component {\n  render() {\n    return (\n      <Loader\n        type=\"Bars\"\n        color=\"#00BFFF\"\n        height={30}\n        width={30}\n        timeout={2000}\n      />\n    );\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport s from './ContactForm.module.css';\nimport { addContact } from '../../redux/operations';\nimport { getItems, getLoading } from '../../redux/selectors';\nimport Loader from '../Loader/Loader';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getItems);\n  const loading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, errors, reset } = useForm();\n\n  const onHandleSubmit = data => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n      )\n    ) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(data.name, data.number));\n\n    reset({ name: '', number: '' });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onHandleSubmit)}>\n        <label className={s.nameLabel}>\n          Name\n          <input\n            ref={register({ required: true, maxLength: 20, minLength: 2 })}\n            type=\"text\"\n            name=\"name\"\n          />\n          {errors.name?.type === 'required' && (\n            <span style={{ color: 'red' }}>'Your input is required'</span>\n          )}\n          {errors.name?.type === 'maxLength' && (\n            <span style={{ color: 'red' }}>'Your input is too long'</span>\n          )}\n          {errors.name?.type === 'minLength' && (\n            <span style={{ color: 'red' }}>'Your input is too short'</span>\n          )}\n        </label>\n        <label className={s.nameLabel}>\n          Number\n          <input\n            ref={register({ required: true, maxLength: 20, minLength: 7 })}\n            type=\"text\"\n            name=\"number\"\n          />\n          {errors.number?.type === 'required' && (\n            <span style={{ color: 'red' }}>'Your input is required'</span>\n          )}\n          {errors.number?.type === 'maxLength' && (\n            <span style={{ color: 'red' }}>'Your input is too long'</span>\n          )}\n          {errors.number?.type === 'minLength' && (\n            <span style={{ color: 'red' }}>'Your input is too short'</span>\n          )}\n        </label>\n        {!loading && (\n          <button className={s.formBtn} type=\"submit\">\n            Add contact\n          </button>\n        )}\n      </form>\n      {loading && <Loader />}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li className={s.contactItem}>\n      <span>{name}</span>\n      <span>{number}</span>\n      <button type=\"submit\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n","export default __webpack_public_path__ + \"static/media/disconnect.0307b2ad.jpg\";","// import { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport s from './ContactList.module.css';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport { fetchContacts, deleteContact } from '../../redux/operations';\nimport Disconnect from '../../img/disconnect.jpg';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  console.log(contacts);\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <ul className={s.contactList}>\n          {contacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n              onDeleteContact={contId => dispatch(deleteContact(contId))}\n            />\n          ))}\n        </ul>\n      ) : (\n        <>\n          <div>\n            <img\n              src={Disconnect}\n              alt=\"disconnect\"\n              style={{ width: '600px', marginTop: '20px' }}\n            />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import { useSelector, useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { changeFilter } from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterLabel}>\n      <span className={s.filterTitle}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      ></input>\n    </label>\n  );\n}\n","import Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <Section>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Section>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => false,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => false,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({ items, filter, loading });\n","import {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactReducer from './reducer';\n// import storage from 'redux-persist/lib/storage';\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const persistedReducer = persistReducer(contactsPersistConfig, contactReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware,\n});\n\n// const persistor = persistStore(store);\n\n// export default { store, persistor };\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}